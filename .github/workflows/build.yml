name: Build for every new release
on:
  push:
    tags:
      - '*'
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  build-number: ${GITHUB_RUN_NUMBER}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: use github.workspace as working dir
        run: cd ${{ github.workspace }}
      - name: collect all java files
        run: find . -type f -name "*.java" > sources.txt
      - name: compile
        run: javac -cp ./ -d ./ @sources.txt
      - name: collect all class files
        run: find . -type f -name "*.class" > binaries.txt
      - name: build_binary_jar
        run: jar -c -f json_parser_${{ github.ref_name }}_java21_bin.jar @binaries.txt
      - name: collect all java and class files
        run: cat sources.txt binaries.txt > sources_and_binaries.txt
      - name: build_source_jar
        run: jar -c -f json_parser_${{ github.ref_name }}_java21_src.jar @sources_and_binaries.txt
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: ./*.jar
          retention-days: 1
      # - uses: marvinpinto/action-automatic-releases@latest
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "${{ github.ref_name }}"
      #     title: "Version ${{ github.ref_name }}"
      #     prerelease: false
      #     files: |
      #       ./LICENSE.txt
      #       ./*.jar
      - name: Uploads asset files to a GitHub Release.
        run: |
          gh release upload ${{ github.ref_name }} ./LICENSE.txt ./*.jar
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Version ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: |
      #       ./LICENSE.txt
      #       ./*.jar
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
